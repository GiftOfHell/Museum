/* tslint:disable */
/* eslint-disable */
/**
 * Location service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    country1: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    city1?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    street1?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    address1?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    image1?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    country2?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    city2?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    street2?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    address2?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    image2?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    country3?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    city3?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    street3?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    address3?: string;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    image3?: string;
}

export function LocationFromJSON(json: any): Location {
    return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Location {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country1': json['country1'],
        'city1': !exists(json, 'city1') ? undefined : json['city1'],
        'street1': !exists(json, 'street1') ? undefined : json['street1'],
        'address1': !exists(json, 'address1') ? undefined : json['address1'],
        'image1': !exists(json, 'image1') ? undefined : json['image1'],
        'country2': !exists(json, 'country2') ? undefined : json['country2'],
        'city2': !exists(json, 'city2') ? undefined : json['city2'],
        'street2': !exists(json, 'street2') ? undefined : json['street2'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'image2': !exists(json, 'image2') ? undefined : json['image2'],
        'country3': !exists(json, 'country3') ? undefined : json['country3'],
        'city3': !exists(json, 'city3') ? undefined : json['city3'],
        'street3': !exists(json, 'street3') ? undefined : json['street3'],
        'address3': !exists(json, 'address3') ? undefined : json['address3'],
        'image3': !exists(json, 'image3') ? undefined : json['image3'],
    };
}

export function LocationToJSON(value?: Location | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country1': value.country1,
        'city1': value.city1,
        'street1': value.street1,
        'address1': value.address1,
        'image1': value.image1,
        'country2': value.country2,
        'city2': value.city2,
        'street2': value.street2,
        'address2': value.address2,
        'image2': value.image2,
        'country3': value.country3,
        'city3': value.city3,
        'street3': value.street3,
        'address3': value.address3,
        'image3': value.image3,
    };
}


